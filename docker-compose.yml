services:
  # PostgreSQL Database for Customer and Invoice services
  postgres:
    image: postgres:16
    container_name: factumarket-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB for Audit service
  mongodb:
    image: mongo:7.0
    container_name: factumarket-mongodb
    environment:
      - MONGO_INITDB_DATABASE=factumarket_audit_development
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ for event messaging
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: factumarket-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Customer Service
  customer-service:
    image: ruby:3.2
    container_name: factumarket-customer-service
    working_dir: /app
    environment:
      - RAILS_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - JWT_SECRET_KEY=factumarket_secret_key_2025
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./customer-service:/app
    command: >
      sh -c "
        bundle install &&
        bundle exec rails db:create db:migrate &&
        bundle exec rails server -b 0.0.0.0
      "

  # Invoice Service
  invoice-service:
    image: ruby:3.2
    container_name: factumarket-invoice-service
    working_dir: /app
    environment:
      - RAILS_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - CUSTOMER_SERVICE_URL=http://customer-service:3000
      - JWT_SECRET_KEY=factumarket_secret_key_2025
    ports:
      - "3002:3000"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      customer-service:
        condition: service_started
    volumes:
      - ./invoice-service:/app
    command: >
      sh -c "
        bundle install &&
        bundle exec rails db:create db:migrate &&
        bundle exec rails server -b 0.0.0.0
      "

  # Audit Service
  audit-service:
    image: ruby:3.2
    container_name: factumarket-audit-service
    working_dir: /app
    environment:
      - RAILS_ENV=development
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - JWT_SECRET_KEY=factumarket_secret_key_2025
    ports:
      - "3003:3000"
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./audit-service:/app
    command: >
      sh -c "
        bundle install &&
        bundle exec rails server -b 0.0.0.0
      "

volumes:
  postgres-data:
  mongodb-data:
  rabbitmq-data:

networks:
  default:
    name: factumarket-network
